name: Release and Deploy

on:
  release:
    types: [created]

jobs:
  update_release:
    name: Attach Files to Release and Update Description
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get commit history
        id: commit_history
        run: |
          echo "## Commit History" > commit_history.txt
          git log --pretty=format:"* %s (%h)" >> commit_history.txt

      - name: Zip repository contents
        run: zip -r release.zip .

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./release.zip
          asset_name: release.zip
          asset_content_type: application/zip

      - name: Fetch the existing release description
        id: fetch_release
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: release } = await github.repos.getRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: context.payload.release.id,
            });
            return { releaseBody: release.body };

      - name: Update release description with commit history
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const commitHistory = fs.readFileSync('commit_history.txt', 'utf8');
            const newBody = `${context.payload.release.body}\n\n${commitHistory}`;
            await github.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: context.payload.release.id,
              body: newBody
            });

  build_and_push_docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: create_release
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/butlarr:latest .
          docker tag ${{ secrets.DOCKER_HUB_USERNAME }}/butlarr:latest ${{ secrets.DOCKER_HUB_USERNAME }}/butlarr:${{ github.event.release.tag_name }}

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/butlarr:latest
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/butlarr:${{ github.event.release.tag_name }}

